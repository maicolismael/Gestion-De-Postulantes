/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interafaces;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
// Asegúrate de importar tu clase de conexión
import conexionbd.conexion; 
/**
 *
 * @author Home
 */
public class ListaPostulantes extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(ListaPostulantes.class.getName());

    /**
     * Creates new form ListaEstudiantes
     */
    public ListaPostulantes() {
        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE); 
        cargarListaEstudiantes();
        
    }
    public void cargarListaEstudiantes() {
    
    // El JTable debe llamarse 'tablaEstudiantes' o jTable1 (ajusta esto si es necesario)
    DefaultTableModel modelo = new DefaultTableModel();
    Connection con = null; 
    Statement stmt = null;
    ResultSet rs = null;
    
    try {
        // 1. Obtener la conexión usando tu CLASE EXISTENTE (ConexionDB)
        // Asegúrate que tu clase 'ConexionDB' está importada correctamente al inicio del archivo.
        con = conexion.getConnection(); 
        stmt = con.createStatement();
        
        // 2. Consulta SQL: Selecciona solo las columnas requeridas de la tabla 'postulantes'
        String SQL = "SELECT ci, nombre, apellido_paterno, apellido_materno, id_carrera FROM postulantes"; 
        rs = stmt.executeQuery(SQL);

        // --- Llenar Encabezados (5 columnas) ---
        modelo.addColumn("CI");
        modelo.addColumn("Nombre");
        modelo.addColumn("Apellido Paterno");
        modelo.addColumn("Apellido Materno");
        modelo.addColumn("ID Carrera"); 
        
        // --- Llenar Filas ---
        while (rs.next()) {
            Object[] fila = new Object[5]; // 5 datos por fila
            
            // Los índices deben coincidir con el orden del SELECT
            fila[0] = rs.getString("ci");
            fila[1] = rs.getString("nombre");
            fila[2] = rs.getString("apellido_paterno");
            fila[3] = rs.getString("apellido_materno");
            fila[4] = rs.getObject("id_carrera"); // Usamos getObject ya que puede ser NULL
            
            modelo.addRow(fila);
        }

        // 3. Asignar el modelo lleno al JTable
        // !! VERIFICA y cambia 'tablaEstudiantes' por el nombre real de tu JTable si es diferente (ej: jTable1)
        jTable1.setModel(modelo); 
        
    } catch (SQLException e) {
        // Manejo de errores de Base de Datos
        JOptionPane.showMessageDialog(this, 
            "Error al cargar la lista. Verifique la conexión o la consulta SQL.\n" + e.getMessage(), 
            "Error de Base de Datos", 
            JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    } finally {
        // 4. CIERRE SEGURO DE RECURSOS (MUY IMPORTANTE)
        try {
            if (rs != null) rs.close();
            if (stmt != null) stmt.close();
            if (con != null) con.close();
        } catch (SQLException ex) {
            System.err.println("Error al cerrar recursos: " + ex.getMessage());
        }
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 727, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 557, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new ListaPostulantes().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
