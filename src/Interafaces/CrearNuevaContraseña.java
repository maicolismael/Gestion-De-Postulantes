/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interafaces;

import javax.swing.*;
import java.awt.event.*;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.ResultSet;


public class CrearNuevaContraseña extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(CrearNuevaContraseña.class.getName());
    private String correoUsuario;
    /**
     * Creates new form CrearNuevaContraseña
     */
    public CrearNuevaContraseña() {
        initComponents();
    }

    public CrearNuevaContraseña(String correo) {
        initComponents();
        this.correoUsuario = correo;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtNueCo = new javax.swing.JTextField();
        txtConf = new javax.swing.JTextField();
        btnGuardar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtNueCo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNueCoActionPerformed(evt);
            }
        });

        txtConf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtConfActionPerformed(evt);
            }
        });

        btnGuardar.setText("Confirmar Nueva Contraseña");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(114, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtConf, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNueCo, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(157, 157, 157))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnGuardar)
                        .addGap(104, 104, 104))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(txtNueCo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(txtConf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(btnGuardar)
                .addContainerGap(55, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNueCoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNueCoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNueCoActionPerformed

    private void txtConfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtConfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtConfActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
    String nuevaPass = txtNueCo.getText().trim();
    String confPass = txtConf.getText().trim();

    if(nuevaPass.isEmpty() || confPass.isEmpty()){
        JOptionPane.showMessageDialog(this, "Ingrese ambas contraseñas");
        return;
    }   

    if(!nuevaPass.equals(confPass)){
        JOptionPane.showMessageDialog(this, "Las contraseñas no coinciden");
        return;
    }   

        try(Connection con = conexionbd.conexion.getConnection()) {

    // Primero obtienes el usuario asociado al correo
        String sqlUsuario = "SELECT u.usuario FROM usuarios u " +
                        "JOIN postulantes p ON u.ci = p.ci " +
                        "WHERE p.correo = ?";
        PreparedStatement ps1 = con.prepareStatement(sqlUsuario);
        ps1.setString(1, correoUsuario);
        ResultSet rs = ps1.executeQuery();

        if(rs.next()) {
            String usuario = rs.getString("usuario");

        // Ahora actualizas la contraseña
            String sqlUpdate = "UPDATE usuarios SET contrasena = ? WHERE usuario = ?";
            PreparedStatement ps2 = con.prepareStatement(sqlUpdate);
            ps2.setString(1, nuevaPass);
            ps2.setString(2, usuario);
            ps2.executeUpdate();

            JOptionPane.showMessageDialog(this, "Contraseña actualizada correctamente");
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(this, "No se encontró usuario asociado a ese correo");
        }

    } catch(SQLException e){
        JOptionPane.showMessageDialog(this, "Error al actualizar contraseña: " + e.getMessage());
        e.printStackTrace();
    }

    }//GEN-LAST:event_btnGuardarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new CrearNuevaContraseña().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGuardar;
    private javax.swing.JTextField txtConf;
    private javax.swing.JTextField txtNueCo;
    // End of variables declaration//GEN-END:variables
}
